group "selenide_kotlin_practice"
version "0.0.1"

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "io.qameta.allure"
apply plugin: "org.gradle.test-retry"
apply plugin: "com.adarshr.test-logger"

buildscript {
    ext.allureVersion = "2.25.0"
    ext.allureGradleVersion = "2.8.1"
    ext.kotlinVersion = "1.9.21"
    ext.junitJupiterVersion = "5.9.2"
    ext.selenideVersion = "7.0.3"
    ext.kluentVersion = "1.60"
    ext.gradleLoggerVersion = "1.7.0"
    ext.gradleRetryVersion = "1.5.8"

    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "io.qameta.allure:allure-gradle:$allureGradleVersion"
        classpath "com.adarshr:gradle-test-logger-plugin:$gradleLoggerVersion"
        classpath "org.gradle:test-retry-gradle-plugin:$gradleRetryVersion"
    }
}

repositories {
    jcenter()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
    implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
    implementation("com.codeborne:selenide:$selenideVersion")
    implementation("io.github.bonigarcia:webdrivermanager:5.6.2") // Use the latest version
    implementation("io.qameta.allure:allure-selenide:$allureVersion")
    implementation("org.amshove.kluent:kluent:$kluentVersion")
    testImplementation("org.junit.jupiter:junit-jupiter:$junitJupiterVersion")
}

compileKotlin {
    kotlinOptions.jvmTarget = 21
}
compileTestKotlin {
    kotlinOptions.jvmTarget = 21
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        testlogger {
            theme "mocha-parallel"
            showStandardStreams false
            showExceptions true
            showSummary true
            showPassed true
            showSkipped true
            showFailed true
            showCauses true
            slowThreshold 1000
        }
    }

    retry {
        maxRetries = 1
        maxFailures = 10
        failOnPassedAfterRetry = false
    }

    systemProperties = [
            "junit.jupiter.execution.parallel.enabled": true,
            "junit.jupiter.execution.parallel.config.strategy": "fixed",
            "junit.jupiter.execution.parallel.config.fixed.parallelism": "$thread"
    ]
}

test {
    jvmArgs "-noverify"
    systemProperties["launch"] = "chrome.local"
    systemProperties["jenkins"] = "$jenkins"
}

task testFirefox(type: Test) {
    systemProperties["launch"] = "firefox.$launch"
    systemProperties["jenkins"] = "$jenkins"
}

task testChrome(type: Test) {
    systemProperties["launch"] = "chrome.$launch"
    systemProperties["jenkins"] = "$jenkins"
}

allure {
    version = allureVersion
    aspectjweaver = true
    aspectjVersion = "1.9.20.1"
    configuration = "implementation"

    useJUnit5 {
        version = allureVersion
    }
}

tasks.withType(Wrapper) {
    gradleVersion = "8.4"
}